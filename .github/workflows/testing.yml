# .github/workflows/deploy-github-pages.yaml

# Workflow name
name: Build and Publish Storybook to GitHub Pages

on:
  # Event for the workflow to run on
  push:
    branches:
      - 'main' # Replace with the branch you want to deploy from

permissions:
  contents: read
  pages: write
  id-token: write

# List of jobs
jobs:
  deploy:
    runs-on: ubuntu-latest
    # Job steps
    steps:
      # Manual Checkout
      - uses: actions/checkout@v4

      # Set up Node
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          # required
          app-id: ${{ vars.CIDER_TESTING_APP_ID }}
          private-key: ${{ secrets.GH_APP_CREDENTIALS_TOKEN }}
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'
      # git commands like commit work using the bot user
      - run: |
          echo $(git config --list)
          # git add .
          # git commit -m "Auto-generated changes"
          # git push

      # - name: Obtain GitHub App Installation Access Token
      #   uses: actions/create-github-app-token@v1
      #   id: app-token
      #   with:
      #     app-id: ${{ vars.APP_ID }}
      #     private-key: ${{ secrets.PRIVATE_KEY }}
      # - uses: ./actions/staging-tests
      #   with:
      #     token: ${{ steps.app-token.outputs.token }}

      #ðŸ‘‡ Add Storybook build and deploy to GitHub Pages as a step in the workflow
      # - uses: bitovi/github-actions-storybook-to-github-pages@v1.0.3
      #   with:
      #     install_command: yarn install # default: npm ci
      #     build_command: yarn build-storybook # default: npm run build-storybook
      #     path: storybook-static # default: dist/storybook
      #     checkout: false # default: true
